 // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤
// üîπ –î–∞–Ω–æ: –î–≤–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞ A –∏ B.
// üîπ –ó–∞–¥–∞—á–∞: –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –≤ –æ–¥–∏–Ω –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è sort().
// üîπ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –†–µ—à–∏—Ç—å –∑–∞ O(N + M). –ø—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä

#include <iostream>
#include <vector>

int main() {
    std::vector<int> a = {1, 3, 5, 7};
    std::vector<int> b = {2, 4, 6, 8, 9, 10};
    std::vector<int> result;

    int i = 0; // –ù–∞—á–∞–ª–æ 1-–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
    int j = 0; // –ù–∞—á–∞–ª–∞ 2-–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

    while (i < a.size() && j < b.size()) {
	if (a[i] < b[j]) {
	    result.push_back(a[i]);
	    i++;
	} else {
	    result.push_back(b[j]);
	    j++;
	}
    }

    while (i < a.size()) {
	result.push_back(a[i]);
	i++;
    }

    while (j < b.size()) {
	result.push_back(b[j]);
	j++;
    }

    for (size_t i = 0; i < result.size(); i++) {
	std::cout << result[i] << " ";
    }

}
